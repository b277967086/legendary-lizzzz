package com.good.diaodiaode.tebiediao;

import com.good.diaodiaode.tebiediao.treemap.Node;
import com.good.diaodiaode.tebiediao.treemap.TreeMapUtils;

import org.junit.Test;

import java.util.HashMap;

import static org.junit.Assert.*;

/**
 * To work on unit tests, switch the Test Artifact in the Build Variants view.
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() throws Exception {
        assertEquals(4, 2 + 2);
    }

    @Test
    public void treemap_text() throws Exception {
        TreeMapUtils.putNode(new Node<Integer, String>(11, "小11"));
        TreeMapUtils.putNode(new Node<Integer, String>(0, "小0"));
        TreeMapUtils.putNode(new Node<Integer, String>(3, "小3"));
        TreeMapUtils.putNode(new Node<Integer, String>(5, "小5"));
        TreeMapUtils.putNode(new Node<Integer, String>(4, "小4"));
        TreeMapUtils.putNode(new Node<Integer, String>(7, "小7"));
        TreeMapUtils.putNode(new Node<Integer, String>(9, "小9"));
    }

    @Test
    public void getSubString_text() throws Exception {
        assertEquals(AlgorithmUtils.getSubString("asdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhg", 3), "ecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebeb");
        assertEquals(AlgorithmUtils.getSubStrings("asdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhgasdfghljwerognvdfkuhgoierhfvoidsfgajksdbfoiqweufjsbadvoigwerogbvnlkdsfbgiieieywnxmecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebebasdgfdsfhfwerdtjervniousrhdgvlndslfuvhowrnileqoebcebebbcbecccebcaeroiuhkjlvbniuewrhg", 3), "ecebebbecebebceeececeececbebcbecccbebcbeccebeebcbecbeccbbbecbecbeeeecebebcebebebebbebeb");
    }

    @Test
    public void getApiSign_text() throws Exception {
        HashMap<String,String> map1 = new HashMap();
        map1.put("asdasd","sdfsd电饭锅");
        map1.put("asdasdasd","sdfasdsd电饭sdogjf锅");
        map1.put("asdaetposd","sdfsd电sdfg饭锅");
        map1.put("assfdgdasd","sdfsd电饭锅");
        map1.put("asdfghasd","sdfsd电fghjf饭锅");
        HashMap map2 = new HashMap();
        map2.put("asdasd","sdfsd电饭锅");
        map2.put("asdasdasd","sdfasdsd电饭sdogjf锅");
        map2.put("asdaetposd","sdfsd电sdfg饭锅");
        map2.put("assfdgdasd","sdfsd电饭锅");
        map2.put("asdfghasd","sdfsd电fghjf饭锅");
       assertEquals(SignUtils.getApiSign(map1,map2),SignUtils.getApiSign2(map1,map2));

    }
}